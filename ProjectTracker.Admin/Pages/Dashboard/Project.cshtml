@page
@model ProjectTracker.Admin.Pages.Dashboard.ProjectModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer L

<h2>@L["ProjectDashboard"]</h2>

@if (Model.Dashboard?.Summary != null)
{
    <div class="card mb-4">
        <div class="card-body">
            <h5 class="card-title">@Model.Dashboard.Summary.Name</h5>
            <div class="row">
                <div class="col-md-3"><strong>@L["Budget"]:</strong> @Model.Dashboard.Summary.Budget</div>
                <div class="col-md-3"><strong>@L["StartDate"]:</strong> @Model.Dashboard.Summary.StartDate.ToShortDateString()</div>
                <div class="col-md-3"><strong>@L["EndDate"]:</strong> @(Model.Dashboard.Summary.EndDate?.ToShortDateString() ?? "-")</div>
                <div class="col-md-3"><strong>@L["Employees"]:</strong> @Model.Dashboard.Summary.ActiveEmployeeCount</div>
                <div class="col-md-3"><strong>@L["Equipment"]:</strong> @Model.Dashboard.Summary.EquipmentCount</div>
                <div class="col-md-3"><strong>@L["Hours"]:</strong> @Model.Dashboard.Summary.HoursTotal</div>
                <div class="col-md-3"><strong>@L["Completion"]:</strong> @Model.Dashboard.Summary.CompletionPercent %</div>
            </div>
        </div>
    </div>
}
else
{
    <p>No Data Available</p>
}

<div class="row mb-4">
    <div class="col-md-6">
        <canvas id="expenseChart"></canvas>
    </div>
    <div class="col-md-6">
        <canvas id="worklogChart"></canvas>
    </div>
</div>

<h3>@L["Equipment"]</h3>
@if (Model.Dashboard.Equipment.Any())
{
    <table id="equipmentTable" class="table table-striped"></table>
}
else
{
    <p>No Data Available</p>
}

<h3>@L["RecentWorkLogs"]</h3>
@if (Model.Dashboard.RecentWorkLogs.Any())
{
    <table id="workLogsTable" class="table table-striped"></table>
}
else
{
    <p>No Data Available</p>
}

<h3>@L["RecentMaintenance"]</h3>
@if (Model.Dashboard.RecentMaintenance.Any())
{
    <table id="maintenanceTable" class="table table-striped"></table>
}
else
{
    <p>No Data Available</p>
}

<div class="mt-3">
    <a asp-route-fmt="xlsx" asp-page-handler="Export" asp-route-projectId="@Model.ProjectId" class="btn btn-outline-success">Excel</a>
    <a asp-route-fmt="pdf" asp-page-handler="Export" asp-route-projectId="@Model.ProjectId" class="btn btn-outline-danger">PDF</a>
</div>

@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.3.6/js/buttons.html5.min.js"></script>
    <script>
        const trend = @Json.Serialize(Model.Dashboard.WorkLogTrend);
        new Chart(document.getElementById('worklogChart'), {
            type: 'line',
            data: {
                labels: trend.map(x => x.month),
                datasets: [{ label: 'Hours', data: trend.map(x => x.hours) }]
            }
        });

        const expense = {
            budget: @Model.Dashboard.Summary?.Budget ?? 0,
            spent: @Model.Dashboard.Summary?.Spent ?? 0
        };
        expense.remaining = expense.budget - expense.spent;
        new Chart(document.getElementById('expenseChart'), {
            type: 'pie',
            data: {
                labels: ['Budget', 'Spent', 'Remaining'],
                datasets: [{ data: [expense.budget, expense.spent, expense.remaining] }]
            }
        });

        new DataTable('#equipmentTable', {
            data: @Json.Serialize(Model.Dashboard.Equipment),
            columns: [
                { title: 'Name', data: 'name' },
                { title: 'Type', data: 'type' },
                { title: 'LastMaintenance', data: 'lastMaintenanceDate', render: d => d ? new Date(d).toLocaleDateString() : '-' },
                { title: 'NextMaintenance', data: 'nextMaintenanceDate', render: d => d ? new Date(d).toLocaleDateString() : '-' },
                { title: 'Status', data: 'status' }
            ],
            dom: 'Bfrtip',
            buttons: ['excel', 'pdf']
        });

        new DataTable('#workLogsTable', {
            data: @Json.Serialize(Model.Dashboard.RecentWorkLogs),
            columns: [
                { title: 'Date', data: 'date', render: d => new Date(d).toLocaleDateString() },
                { title: 'Title', data: 'title' },
                { title: 'Employee', data: 'employee' },
                { title: 'Duration', data: 'duration' },
                { title: 'Description', data: 'description' }
            ],
            dom: 'Bfrtip',
            buttons: ['excel', 'pdf']
        });

        new DataTable('#maintenanceTable', {
            data: @Json.Serialize(Model.Dashboard.RecentMaintenance),
            columns: [
                { title: 'Equipment', data: 'equipmentName' },
                { title: 'LastMaintenance', data: 'lastMaintenanceDate', render: d => new Date(d).toLocaleDateString() },
                { title: 'NextMaintenance', data: 'nextMaintenanceDate', render: d => new Date(d).toLocaleDateString() }
            ],
            dom: 'Bfrtip',
            buttons: ['excel', 'pdf']
        });
    </script>
}
