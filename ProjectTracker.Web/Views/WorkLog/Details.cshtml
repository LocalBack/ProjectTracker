@model WorkLogDto
@{
    ViewData["Title"] = "İş Kaydı Detayı";
    var details = ViewBag.Details as IEnumerable<WorkLogDetailDto>;
    var attachments = ViewBag.Attachments as IEnumerable<WorkLogAttachmentDto>;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-8">
            <!-- Ana Bilgiler -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="fas fa-info-circle"></i> İş Kaydı Detayları
                    </h3>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-3">Başlık:</dt>
                        <dd class="col-sm-9">@Model.Title</dd>

                        <dt class="col-sm-3">Proje:</dt>
                        <dd class="col-sm-9">
                            <a asp-controller="Project" asp-action="Details" asp-route-id="@Model.ProjectId">
                                @Model.ProjectName
                            </a>
                        </dd>

                        <dt class="col-sm-3">Çalışan:</dt>
                        <dd class="col-sm-9">@Model.EmployeeName</dd>

                        <dt class="col-sm-3">Tarih:</dt>
                        <dd class="col-sm-9">@Model.WorkDate.ToString("dd.MM.yyyy")</dd>

                        <dt class="col-sm-3">Harcanan Süre:</dt>
                        <dd class="col-sm-9">@Model.HoursSpent.ToString("F1") saat</dd>

                        <dt class="col-sm-3">Açıklama:</dt>
                        <dd class="col-sm-9">
                            <p class="text-justify">@Model.Description</p>
                        </dd>
                    </dl>
                </div>
            </div>

            <!-- Detaylı Adımlar -->
            @if (details != null && details.Any())
            {
                <div class="card mt-3">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fas fa-list-ol"></i> Detaylı Adımlar
                        </h3>
                    </div>
                    <div class="card-body">
                        @foreach (var detail in details.OrderBy(d => d.StepNumber))
                        {
                            <div class="card mb-2">
                                <div class="card-body">
                                    <h5 class="card-title">Adım @detail.StepNumber: @detail.StepDescription</h5>
                                    <p class="card-text">
                                        <strong>Teknik Detaylar:</strong> @detail.TechnicalDetails<br>
                                        <strong>Sonuç:</strong> @detail.Result
                                    </p>
                                    @if (!string.IsNullOrEmpty(detail.AdditionalData))
                                    {
                                        <pre class="bg-light p-2">@detail.AdditionalData</pre>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        <div class="col-md-4">
            <!-- Ekler -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="fas fa-paperclip"></i> Ekler (@(attachments?.Count() ?? 0))
                    </h3>
                </div>
                <div class="card-body">
                    @if (attachments != null && attachments.Any())
                    {
                        <ul class="list-group">
                            @foreach (var attachment in attachments)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <i class="fas fa-file-@GetFileIcon(attachment.FileType)"></i>
                                        @attachment.FileName
                                        <br>
                                        <small class="text-muted">
                                            @GetFileSize(attachment.FileSize)
                                            @if (!string.IsNullOrEmpty(attachment.Description))
                                            {
                                                <br>
                                                @attachment.Description
                                            }
                                        </small>
                                    </div>
                                    <a href="@attachment.FilePath" class="btn btn-sm btn-primary" download>
                                        <i class="fas fa-download"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted">Henüz ek dosya yok.</p>
                    }
                </div>
            </div>

            <!-- İşlemler -->
            <div class="card mt-3">
                <div class="card-body">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning btn-block">
                        <i class="fas fa-edit"></i> Düzenle
                    </a>
                    <a asp-action="Index" class="btn btn-secondary btn-block">
                        <i class="fas fa-arrow-left"></i> Listeye Dön
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetFileIcon(string fileType)
    {
        return fileType.ToLower() switch
        {
            "pdf" => "pdf",
            "doc" or "docx" => "word",
            "xls" or "xlsx" => "excel",
            "png" or "jpg" or "jpeg" => "image",
            "mp4" or "avi" => "video",
            "zip" or "rar" => "archive",
            _ => "alt"
        };
    }

    string GetFileSize(long bytes)
    {
        string[] sizes = { "B", "KB", "MB", "GB" };
        int order = 0;
        double size = bytes;
        while (size >= 1024 && order < sizes.Length - 1)
        {
            order++;
            size = size / 1024;
        }
        return $"{size:0.##} {sizes[order]}";
    }
}